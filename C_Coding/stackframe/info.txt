
stack.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <myadd>:
int myadd(int a,int b,int c,int d,int e,int f,int g)
{
   0:	55                   	push   ebp
   1:	48                   	dec    eax
   2:	89 e5                	mov    ebp,esp
   4:	89 7d ec             	mov    DWORD PTR [ebp-0x14],edi
   7:	89 75 e8             	mov    DWORD PTR [ebp-0x18],esi
   a:	89 55 e4             	mov    DWORD PTR [ebp-0x1c],edx
   d:	89 4d e0             	mov    DWORD PTR [ebp-0x20],ecx
  10:	44                   	inc    esp
  11:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
  14:	44                   	inc    esp
  15:	89 4d d8             	mov    DWORD PTR [ebp-0x28],ecx
  int h = a + b + c + d+e+g;
  18:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
  1b:	8b 55 ec             	mov    edx,DWORD PTR [ebp-0x14]
  1e:	01 c2                	add    edx,eax
  20:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
  23:	01 c2                	add    edx,eax
  25:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
  28:	01 c2                	add    edx,eax
  2a:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
  2d:	01 c2                	add    edx,eax
  2f:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
  32:	01 d0                	add    eax,edx
  34:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
  return h;
  37:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
}
  3a:	5d                   	pop    ebp
  3b:	c3                   	ret    

000000000000003c <main>:
int main()
{
  3c:	55                   	push   ebp
  3d:	48                   	dec    eax
  3e:	89 e5                	mov    ebp,esp
  40:	48                   	dec    eax
  41:	83 ec 28             	sub    esp,0x28
  int a = 1; 
  44:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [ebp-0x4],0x1
  int b = 1;
  4b:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [ebp-0x8],0x1
  int c = 1;
  52:	c7 45 f4 01 00 00 00 	mov    DWORD PTR [ebp-0xc],0x1
  int d = 1;
  59:	c7 45 f0 01 00 00 00 	mov    DWORD PTR [ebp-0x10],0x1
  int e = 1;
  60:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [ebp-0x14],0x1
  int f = 1;
  67:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [ebp-0x18],0x1
  int g = 1;
  6e:	c7 45 e4 01 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x1
  int ret = myadd(a,b,c,d,e,f,g);
  75:	44                   	inc    esp
  76:	8b 4d e8             	mov    ecx,DWORD PTR [ebp-0x18]
  79:	44                   	inc    esp
  7a:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
  7d:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
  80:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
  83:	8b 75 f8             	mov    esi,DWORD PTR [ebp-0x8]
  86:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
  89:	8b 7d e4             	mov    edi,DWORD PTR [ebp-0x1c]
  8c:	89 3c 24             	mov    DWORD PTR [esp],edi
  8f:	89 c7                	mov    edi,eax
  91:	e8 00 00 00 00       	call   96 <main+0x5a>
  96:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
  return 0;
  99:	b8 00 00 00 00       	mov    eax,0x0

}
  9e:	c9                   	leave  
  9f:	c3                   	ret    


test.o：     文件格式 elf64-x86-64


Disassembly of section .text:

0000000000000000 <myadd>:
int myadd(int a,int b)
{
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	89 7d ec             	mov    %edi,-0x14(%rbp)
   7:	89 75 e8             	mov    %esi,-0x18(%rbp)
  static int INITIALIZED_STATIC_LOCAL_VAR = 11;
  const int INITIALIZED_CONST_LOCAL_VAR =  10;
   a:	c7 45 fc 0a 00 00 00 	movl   $0xa,-0x4(%rbp)
  static int UNTNTIALIZED_CONST_LOCAL_VAR;
  int UNINITALIZED_LOCAL_VAR;
  return a+b;
  11:	8b 45 e8             	mov    -0x18(%rbp),%eax
  14:	8b 55 ec             	mov    -0x14(%rbp),%edx
  17:	01 d0                	add    %edx,%eax
}
  19:	5d                   	pop    %rbp
  1a:	c3                   	retq   

000000000000001b <main>:
static const int INITALIZED_STATIC_CONST_GLOBAL_VAR =  10;

int INITALIZED_GLOBAL_VAR= 3;
int UNINITALIZED_GLOBAL_VAR;
int main()
{
  1b:	55                   	push   %rbp
  1c:	48 89 e5             	mov    %rsp,%rbp
  1f:	48 83 ec 10          	sub    $0x10,%rsp
  int a = 1; 
  23:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  int b = 1;
  2a:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%rbp)
  int ret = myadd(a,b);
  31:	8b 55 f8             	mov    -0x8(%rbp),%edx
  34:	8b 45 fc             	mov    -0x4(%rbp),%eax
  37:	89 d6                	mov    %edx,%esi
  39:	89 c7                	mov    %eax,%edi
  3b:	e8 00 00 00 00       	callq  40 <main+0x25>
  40:	89 45 f4             	mov    %eax,-0xc(%rbp)
  return 0;
  43:	b8 00 00 00 00       	mov    $0x0,%eax

}
  48:	c9                   	leaveq 
  49:	c3                   	retq   
